# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: master
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes_asyncio.client.models.v1alpha3_device_class_spec import V1alpha3DeviceClassSpec

class TestV1alpha3DeviceClassSpec(unittest.TestCase):
    """V1alpha3DeviceClassSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1alpha3DeviceClassSpec:
        """Test V1alpha3DeviceClassSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1alpha3DeviceClassSpec`
        """
        model = V1alpha3DeviceClassSpec()
        if include_optional:
            return V1alpha3DeviceClassSpec(
                config = [
                    kubernetes_asyncio.client.models.v1alpha3/device_class_configuration.v1alpha3.DeviceClassConfiguration(
                        opaque = kubernetes_asyncio.client.models.v1alpha3/opaque_device_configuration.v1alpha3.OpaqueDeviceConfiguration(
                            driver = '', 
                            parameters = kubernetes_asyncio.client.models.parameters.parameters(), ), )
                    ],
                selectors = [
                    kubernetes_asyncio.client.models.v1alpha3/device_selector.v1alpha3.DeviceSelector(
                        cel = kubernetes_asyncio.client.models.v1alpha3/cel_device_selector.v1alpha3.CELDeviceSelector(
                            expression = '', ), )
                    ]
            )
        else:
            return V1alpha3DeviceClassSpec(
        )
        """

    def testV1alpha3DeviceClassSpec(self):
        """Test V1alpha3DeviceClassSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
