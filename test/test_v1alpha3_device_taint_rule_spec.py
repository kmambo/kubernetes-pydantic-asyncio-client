# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: master
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes_asyncio.client.models.v1alpha3_device_taint_rule_spec import V1alpha3DeviceTaintRuleSpec

class TestV1alpha3DeviceTaintRuleSpec(unittest.TestCase):
    """V1alpha3DeviceTaintRuleSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1alpha3DeviceTaintRuleSpec:
        """Test V1alpha3DeviceTaintRuleSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1alpha3DeviceTaintRuleSpec`
        """
        model = V1alpha3DeviceTaintRuleSpec()
        if include_optional:
            return V1alpha3DeviceTaintRuleSpec(
                device_selector = kubernetes_asyncio.client.models.v1alpha3/device_taint_selector.v1alpha3.DeviceTaintSelector(
                    device = '', 
                    device_class_name = '', 
                    driver = '', 
                    pool = '', 
                    selectors = [
                        kubernetes_asyncio.client.models.v1alpha3/device_selector.v1alpha3.DeviceSelector(
                            cel = kubernetes_asyncio.client.models.v1alpha3/cel_device_selector.v1alpha3.CELDeviceSelector(
                                expression = '', ), )
                        ], ),
                taint = kubernetes_asyncio.client.models.v1alpha3/device_taint.v1alpha3.DeviceTaint(
                    effect = '', 
                    key = '', 
                    time_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    value = '', )
            )
        else:
            return V1alpha3DeviceTaintRuleSpec(
                taint = kubernetes_asyncio.client.models.v1alpha3/device_taint.v1alpha3.DeviceTaint(
                    effect = '', 
                    key = '', 
                    time_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    value = '', ),
        )
        """

    def testV1alpha3DeviceTaintRuleSpec(self):
        """Test V1alpha3DeviceTaintRuleSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
