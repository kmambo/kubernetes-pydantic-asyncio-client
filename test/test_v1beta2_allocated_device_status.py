# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: master
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes_asyncio.client.models.v1beta2_allocated_device_status import V1beta2AllocatedDeviceStatus

class TestV1beta2AllocatedDeviceStatus(unittest.TestCase):
    """V1beta2AllocatedDeviceStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta2AllocatedDeviceStatus:
        """Test V1beta2AllocatedDeviceStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1beta2AllocatedDeviceStatus`
        """
        model = V1beta2AllocatedDeviceStatus()
        if include_optional:
            return V1beta2AllocatedDeviceStatus(
                conditions = [
                    kubernetes_asyncio.client.models.v1/condition.v1.Condition(
                        last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        message = '', 
                        observed_generation = 56, 
                        reason = '', 
                        status = '', 
                        type = '', )
                    ],
                data = None,
                device = '',
                driver = '',
                network_data = kubernetes_asyncio.client.models.v1beta2/network_device_data.v1beta2.NetworkDeviceData(
                    hardware_address = '', 
                    interface_name = '', 
                    ips = [
                        ''
                        ], ),
                pool = ''
            )
        else:
            return V1beta2AllocatedDeviceStatus(
                device = '',
                driver = '',
                pool = '',
        )
        """

    def testV1beta2AllocatedDeviceStatus(self):
        """Test V1beta2AllocatedDeviceStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
